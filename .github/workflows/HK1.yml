name: Build HK1 img86+o and 86+

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      days:
        description: 'Number of days.'
        required: true
        default: 60
      minimum_runs:
        description: 'The minimum runs to keep for each workflow.'
        required: true
        default: 6
  schedule:
    #- cron: 0 23 * * *      
env:
  UPLOAD_COWTRANSFER: false
  RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id || ! github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL https://is.gd/depends_ubuntu_2204)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        cd openwrt
        useVersionInfo=$(git show -s --date=short --format="Author: %an<br/>date: %cd<br/>commit: %s<br/>commit hash: %H")
        echo "useVersionInfo=$useVersionInfo" >> $GITHUB_ENV
        echo "DATE=$(date "+%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV
        echo "DATE1=$(date "+%Y-%m-%d")" >> $GITHUB_ENV

    - name: Package Armvirt as OpenWrt
      if: (!cancelled())
      uses: ophub/flippy-openwrt-actions@main
      env:
        OPENWRT_ARMVIRT: https://github.com/breakings/OpenWrt/releases/download/ARMv8_ROOTFS/openwrt-armvirt-64-generic-rootfs.tar.gz
        PACKAGE_SOC: all
        WHOAMI: breakings
        #KERNEL_REPO_URL: https://github.com/breakings/OpenWrt/tree/main/opt
        KERNEL_VERSION_NAME: 5.15.100_6.1.18
        #OPENWRT_VER: R23.5.1
        KERNEL_AUTO_LATEST: true
        GZIP_IMGS: .gz
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: SSH connection to Actions @ Ctrl+C to enter, Ctrl+D to exit
      uses: P3TERX/ssh2actions@main
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: Upload artifact to Actions
      uses: kittaakos/upload-artifact-as-is@master
      if: env.PACKAGED_STATUS == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      with:
        path: ${{ env.PACKAGED_OUTPUTPATH }}/

    - name: Create release
      id: release
      uses: ncipollo/release-action@v1
      with:
        name: ${{ env.DATE }} üöÄ N1/ hk1-Openwrt-img | ÁºñËØë
        allowUpdates: true
        tag: ${{ env.version }}
        commit: main
        token: ${{ secrets.RELEASES_TOKEN }}
        body: |
          ## ‰ª•‰∏ã‰∏∫N1„ÄÅHK1„ÄÅx96maxÁöÑÊúÄÊñ∞Âõ∫‰ª∂ÔºàÊØèÊó•‰∏äÂçà7Êó∂Ëá™Âä®ÁºñËØëÊâìÂåÖÊúÄÊñ∞Âõ∫‰ª∂Ôºâ
          ÈªòËÆ§IPÔºö192.168.1.99 ÈªòËÆ§ÂØÜÁ†ÅÔºö password
          OpenwrtüöÄ(Ê≥®:Ê≠§ÁâàÊú¨‰∏∫jcnf‰∏™‰∫∫ÁöÑÁ≤æÁÆÄÁâà„ÄÇ+oÁâàÂÜÖÊ†∏Êõ¥Á®≥ÂÆö)
          N1ÂíåHK1ÂÖ®Êñ∞ÂÆâË£ÖÊñπÊ≥ïÔºö
             1. cd root
             2. ./install-to-emmc.sh
          N1ÂíåHK1Âú®Á∫øÂçáÁ∫ßÊñπÊ≥ïÔºö
             1. cd /mnt/mmcblk2p4
             2. wget ÂçáÁ∫ßËÑöÊú¨ÈìæÊé•,Èº†Ê†áÂè≥Âáªopenwrt-update-amlogic Êñá‰ª∂Ëé∑ÂèñÈìæÊé•Âú∞ÂùÄ
             3. wget img.gzÂêéÁºÄÂêçÁöÑÂõ∫‰ª∂ÈìæÊé•,Èº†Ê†áÂè≥ÂáªÂêéÁºÄ.img.gzÊñá‰ª∂Ëé∑ÂèñÈìæÊé•Âú∞ÂùÄ
             4. gzip -d Ëß£ÂéãÁº©‰∏ä‰∏ÄÊ≠•‰∏ãËΩΩÁöÑÂõ∫‰ª∂ÂÖ®Âêç
             5. chmod +x openwrt-update-amlogic
             6. ./openwrt-update-amlogicÂêéÔºåÈÄâÊã©yÊòØ‰øùÁïôÈÖçÁΩÆÂçáÁ∫ßÔºåÈÄânÁõ∏ÂΩì‰∫éÈáçË£Ö„ÄÇ
             7.ÂçáÁ∫ßÂÆåÊàêÂêéÁ≥ªÁªü‰ºöËá™Âä®ÈáçÂêØÔºåÁ®çÂÆâÂãøË∫Å„ÄÇ
        artifacts: "/opt/openwrt_packit/output/*"   

    - name: Upload firmware to WeTransfer
      if: steps.gz.outputs.status == 'success' && env.UPLOAD_COWTRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress /opt/openwrt/tmp/$RELEASE_NAME.gz 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
        echo "::set-output name=url::$(cat cowtransfer.log | grep https | cut -f3 -d" ")"
        
    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      with:
        keep_latest: 3
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  over:
    needs: [build]
    runs-on: ubuntu-20.04
    steps:
    - name: TG notification #TGÊé®ÈÄÅ
      run: curl "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" -d "chat_id=${{ secrets.TELEGRAM_CHAT_ID }}&text=HK186+0ÂíåHK186+ÊâìÂåÖÊàêÂäü"